<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.Penistrong.GameResourceMS.posts.mapper.PostsMapper">
	
	<select id="validatePost" resultType="java.lang.Boolean">
		SELECT IFNULL(
		(SELECT 1 
		  FROM posts_base_info 
		 WHERE post_id = #{post_id} 
		   AND poster_id = #{poster_id}
		       limit 1),0)
	</select>
	
	<select id="getLatestPosts" resultType="java.util.Map">
		SELECT a.*,b.visits,b.last_reply_time,b.last_reply_user,b.floors,b.tags
		  FROM posts_base_info a
	INNER JOIN posts_extend_info b
		  	ON a.resource_id = b.resource_id AND a.post_id = b.post_id
	  ORDER BY b.last_reply_time DESC	   
	</select>
	
	<select id="getRepliesOfPost" resultType="java.util.Map">
		SELECT a.post_id,a.floor,b.resource_id,b.user_id,b.user_name,a.reply,a.reply_time,b.level,b.identity
		  FROM posts_reply a
	INNER JOIN user_accounts b
			ON a.replier_id = b.resource_id
		 WHERE a.post_id = #{post_id}
	  ORDER BY a.floor
	</select>
	
	<select id="getPostMainInfo" resultType="java.util.Map">
		SELECT a.resource_id,a.post_author,c.level,c.identity,c.introduction,a.upload_time,a.post_title,a.post_subhead,a.post_content,b.visits,b.last_reply_time,b.last_reply_user,b.floors,b.tags
		  FROM (posts_base_info a
	INNER JOIN posts_extend_info b
			ON a.resource_id = b.resource_id and a.post_id = b.post_id)
	INNER JOIN user_accounts c
			ON a.resource_id = c.resource_id
	  	 WHERE a.poster_id = #{poster_id}
	  	   AND a.post_id = #{post_id}
	</select>
	
	<select id="getFloorsOfPost" resultType="java.lang.Integer">
		SELECT floors
		  FROM posts_extend_info
		 WHERE post_id = #{post_id}
	</select>
	
	<select id="getLatestPID" resultType="java.lang.String">
		SELECT post_id
		  FROM posts_base_info
	  ORDER BY post_id DESC
	     LIMIT 1
	</select>
	
	<insert id="createNewPost">
		INSERT INTO
			   posts_base_info
		(RESOURCE_ID,POSTER_ID,POST_ID,POST_AUTHOR,UPLOAD_TIME,POST_TITLE,POST_SUBHEAD,POST_CONTENT)
		VALUES 
		(#{resource_id},#{poster_id},#{post_id},#{post_author},#{upload_time},#{post_title},#{post_subhead},#{post_content})
	</insert>
	
	<insert id="createPostExtend">
		INSERT INTO
			   posts_extend_info
		(RESOURCE_ID,POST_ID,VISITS,LAST_REPLY_TIME,LAST_REPLY_USER,FLOORS,TAGS)
		VALUES
		(#{resource_id},#{post_id},#{visits},#{upload_time},#{post_author},#{floors},#{tags})
	</insert>
	
	<insert id="createPostReply">
		INSERT INTO
			   posts_reply
		(POST_ID,FLOOR,REPLIER_ID,REPLY,REPLY_TIME)
		VALUES
		(#{post_id},#{floors},#{resource_id},#{reply},#{upload_time})
	</insert>
	
	<insert id="insertNewReply">
		INSERT INTO
			   posts_reply
		(POST_ID,FLOOR,REPLIER_ID,REPLY,REPLY_TIME)
		VALUES
		(#{post_id},#{floor},#{replier_id},#{reply},#{reply_time})
	</insert>
	
	<update id="updateFloorsOfPost">
		UPDATE posts_extend_info
		   SET floors = #{floors}
		   <if test="reply_time != '' and reply_time != null">
		   ,last_reply_time=#{reply_time}
		   </if>
		   <if test="replier_name != '' and replier_name != null">
		   ,last_reply_user=#{replier_name}
		   </if>
		 WHERE post_id = #{post_id}
	</update>
	
	<update id="updatePostVisits">
		UPDATE posts_extend_info
		   SET visits = visits + 1
		 WHERE post_id = #{post_id}
	</update>
	
	<update id="rewardsForReply">
		UPDATE user_accounts
		   SET exp = exp + 3, coins = coins + 1
		 WHERE resource_id = #{replier_id}
	</update>
	
	<update id="rewardsForNewPost">
		UPDATE user_accounts
		   SET exp = exp + 10, coins = coins + 20
		 WHERE resource_id = #{resource_id}
	</update>
</mapper>