<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd   
				        http://www.springframework.org/schema/tx   
				        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
				        http://www.springframework.org/schema/task 
						http://www.springframework.org/schema/task/spring-task.xsd
				        http://www.springframework.org/schema/aop 
				        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd ">
	
	<!-- 扫描所有配置了注解的类，装入spring容器中进行管理 -->
	<context:component-scan base-package="com.Penistrong.GameResourceMS.*"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/game_resource_db?characterEncoding=utf-8&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;useSSL=true"/>
		<property name="username" value="Penistrong"/>
		<property name="password" value="chenliwei"/>
		
		<property name="maxActive" value="10"/>
		<property name="maxIdle" value="10"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" lazy-init="false">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	
	<!-- 扫描mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" lazy-init="false">
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
		<property name="basePackage" value="com.Penistrong.GameResourceMS.*.mapper,com.Penistrong.GameResourceMS.*.*.mapper,com.Penistrong.GameResourceMS.*.*.*.mapper,com.Penistrong.GameResourceMS.*.*.*.*.mapper,com.Penistrong.GameResourceMS.*.*.*.*.*.mapper"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven/>
	
	<!-- 开启基于注解的aop功能 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 开启spring定时任务(基于注解@Schduled) -->
	<task:annotation-driven/>
	
	<!-- 事务管理器 对mybatis操作数据库进行事物控制,spring使用jdbc的事物控制类 -->
	<bean id="transactionManager" lazy-init="false"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 通知(使用声明开发事物时采用此方法) -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name=""/>
		</tx:attributes>
	</tx:advice> -->

	

</beans>

				        